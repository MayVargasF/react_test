{"version":3,"sources":["services/localstorage.js","components/App.js","index.js"],"names":["objectToExport","get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","value","stringify","setItem","remove","removeItem","clear","App","useState","contacts","data","setData","search","setSearch","name","lastname","phone","email","newContact","setNewContact","handleNewContact","ev","target","id","htmlData","filter","contact","toLowerCase","includes","map","i","className","href","title","autoComplete","type","placeholder","onChange","onClick","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2a28d29.chunk.js","sourcesContent":["// Fichero src/services/localStorage.js\r\n\r\n// Función que obtiene una propiedad del local storage\r\n// Si esta propiedad no existe porque es la primera vez que la usuaria entra en la página, la función devuelve el valor de defaultValue\r\n// Que esta función devuelva un valor por defecto es una cómoda manera de trabajar, así esta comprobación no la tenemos que hacer en App.js\r\nconst get = (key, defaultValue) => {\r\n  const localStorageData = localStorage.getItem(key);\r\n  if (localStorageData === null) {\r\n    return defaultValue;\r\n  } else {\r\n    return JSON.parse(localStorageData);\r\n  }\r\n};\r\n\r\n// Función que guarda una propiedad y su valor en el local storage\r\nconst set = (key, value) => {\r\n  const localStorageData = JSON.stringify(value);\r\n  localStorage.setItem(key, localStorageData);\r\n};\r\n\r\n// Función que borra una propiedad del local storage\r\nconst remove = (key) => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\n// Función que limpia todo el local storage\r\nconst clear = () => {\r\n  localStorage.clear();\r\n};\r\n\r\n// Creamos un objeto temporal, que es el que queremos exportar\r\n// Este objeto tiene una propiedad get cuyo valor es la función get\r\n// Este objeto tiene una propiedad set cuyo valor es la función set\r\n// Este objeto tiene una propiedad remove cuyo valor es la función remove\r\n// Este objeto tiene una propiedad clear cuyo valor es la función clear\r\nconst objectToExport = {\r\n  get: get,\r\n  set: set,\r\n  remove: remove,\r\n  clear: clear,\r\n};\r\n\r\n// Exportamos el objeto para que pueda ser usado desde App\r\nexport default objectToExport;\r\n","import \"../styles/App.scss\";\nimport contacts from \"../data/contacts.json\";\nimport { useState } from \"react\";\nimport localStorage from \"../services/localstorage\";\n\nfunction App() {\n  //variablesde estado\n  const [data, setData] = useState(contacts);\n  const [search, setSearch] = useState(localStorage.get(\"buscar\", \"\"));\n  const [newContact, setNewContact] = useState({\n    name: \"\",\n    lastname: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n\n  //filtrar\n  const handleSearch = (ev) => {\n    localStorage.set(\"buscar\", ev.target.value);\n    setSearch(ev.target.value);\n  };\n\n  //new contact\n  const handleNewContact = (ev) => {\n    setNewContact({\n      ...newContact,\n      [ev.target.id]: ev.target.value,\n    });\n  };\n\n  //add new contact\n  const handleClick = (ev) => {\n    ev.preventDefault();\n    setData([...data, newContact]);\n    setNewContact({\n      name: \"\",\n      lastname: \"\",\n      phone: \"\",\n      email: \"\",\n    });\n  };\n\n  //render\n  const htmlData = data\n\n    //Para filtrar en distintos inputs, por ejemplo por apellido, tendríamos que poner otro filtro igual pero con .lastname y crear otra variable de estado para guardar esa búsqueda.\n\n    .filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(search.toLowerCase()) ||\n        contact.lastname.toLowerCase().includes(search.toLowerCase())\n    )\n\n    .map((contact, i) => {\n      return (\n        <li key={i} className=\"contact__item\">\n          <p className=\"contact__name\">\n            <label className=\"contact__label\">Nombre:</label>\n            {contact.name} {contact.lastname}\n          </p>\n          <p className=\"contact__phone\">\n            <label className=\"contact__label\">Teléfono:</label>\n            <a\n              href={`tel:${contact.phone}`}\n              title=\"Pulsa aquí para llamar a Lola\"\n            >\n              {contact.phone}\n            </a>\n          </p>\n          <p className=\"contact__mail\">\n            <label className=\"contact__label\">Email:</label>\n            <a\n              href={`mailto:${contact.email}`}\n              title=\"Pulsa aquí para escribir a Lola\"\n            >\n              {contact.email}\n            </a>\n          </p>\n        </li>\n      );\n    });\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header className=\"header\">\n        <h1 className=\"header__title\">Mi agenda de contactos</h1>\n        <form>\n          <input\n            className=\"header__search\"\n            autoComplete=\"off\"\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Filtrar contactos por nombre\"\n            value={search}\n            onChange={handleSearch}\n          />\n        </form>\n      </header>\n\n      <main>\n        {/* contact list */}\n        <ul className=\"contact__list\">{htmlData}</ul>\n\n        {/* new contact */}\n        <form className=\"new-contact__form\">\n          <h2 className=\"new-contact__title\">Añade un nuevo contacto</h2>\n          <input\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            value={newContact.name}\n            onChange={handleNewContact}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"lastname\"\n            id=\"lastname\"\n            placeholder=\"Apellidos\"\n            value={newContact.lastname}\n            onChange={handleNewContact}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"phone\"\n            name=\"phone\"\n            id=\"phone\"\n            placeholder=\"Teléfono\"\n            value={newContact.phone}\n            onChange={handleNewContact}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            value={newContact.email}\n            onChange={handleNewContact}\n          />\n          <input\n            className=\"new-contact__btn\"\n            type=\"submit\"\n            value=\"Añadir\"\n            onClick={handleClick}\n          />\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}